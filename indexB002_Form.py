"""
La fonction st.form de Streamlit en Python sert √† cr√©er un formulaire 
qui regroupe plusieurs √©l√©ments et widgets avec un bouton :
-> Elle permet de regrouper visuellement des √©l√©ments et widgets 
dans un conteneur
-> Elle contient un bouton de soumission qui, lorsqu'il est press√©, 
envoie toutes les valeurs des widgets √† l'int√©rieur du formulaire √† Streamlit 
en une seule fois
-> Elle emp√™che le rechargement automatique du script √† chaque modification 
d'un widget, contrairement au comportement par d√©faut de Streamlit
-> Elle permet de traiter les entr√©es utilisateur par lots, 
ce qui peut √™tre utile pour optimiser les performances de l'application

Mais :
-> Chaque formulaire doit contenir un st.form_submit_button
-> st.download_button ne peut pas √™tre ajout√© dans un formulaire
-> Les formulaires peuvent appara√Ætre n'importe o√π dans l'application, 
mais ne peuvent pas √™tre imbriqu√©s les uns dans les autres

Date : 04/03/2025
Editeur : Laurent Reynaud
"""

import streamlit as st

class App:
    
    def app():
        
        # Titre principal
        st.title('Streamlit - form')
        
        # Widgets
        my_textin1 = st.text_input('Entrer votre nom')
        my_check1 = st.checkbox('Je valide')
        my_slider1 = st.select_slider(
            "S√©lectionner une couleur", options=['rouge', 'jaune', 'bleu'],)
        my_button1 = st.button('Valider')
        
        # Si le bouton a √©t√© appuy√©...
        if my_button1:
            st.write(f"Texte saisi : {my_textin1}")
            st.write(f"Case √† cocher : {my_check1}")
            st.write(f"Glisseur - option choisie : {my_slider1}")
        
        # Formulaire contenant les widgets ci-apr√®s
        form = st.form(key='my-form')
        my_textin2 = form.text_input('Entrer votre nom')
        my_check2 = form.checkbox('Je valide')
        my_slider2 = form.select_slider(
            "S√©lectionner une couleur", options=['rouge', 'jaune', 'bleu'],)
        my_button2 = form.form_submit_button('Valider')
        
        # Si le bouton a √©t√© appuy√©...
        if my_button2:
            st.write(f"Texte saisi : {my_textin2}")
            st.write(f"Case √† cocher : {my_check2}")
            st.write(f"Glisseur - option choisie : {my_slider2}")
        
        

if __name__ == '__main__':
    
    # Configuration de la page web
    st.set_page_config(
        page_title='form',
        page_icon='üò®',
        layout='centered',
    )
    
    # Instanciation de la classe ci-avant
    app = App.app()
